name: Daily Build

on:
  push:
    tags:
      - '*'
  workflow_dispatch:
    inputs:
      buildNumber:
        description: 'Build Number'
        required: true
        default: '9999'
      buildYear:
        description: 'Build Year'
        required: true
        default: '2100'
      onlyLatest:
        description: "Only Latest Xcode"
        type: 'boolean'
        required: false
        default: false

env:
  WORKSPACE: ${{ github.workspace }}
  BUILD_NUMBER: ${{ github.event.inputs.buildNumber }}
  YEAR: ${{ github.event.inputs.buildYear }}

jobs:
  source-code:
    name: Check out and process source code
    runs-on: windows-latest
    steps:
      - run: |
          $CDR = Split-Path -Leaf (Get-Location)
          cd ..
          Remove-Item -Recurse -Force $CDR
          New-Item -ItemType Directory -Force -Name $CDR
          cd $CDR
        shell: pwsh
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - run: ./tools/GHAction/daily_env.sh
        shell: bash
      - name: Set daily build
        run: ./tools/GHAction/process_sources.sh
        shell: bash
      - name: Upload Source bundle
        uses: actions/upload-artifact@v4
        with:
          name: SourceCode
          path: ./output

  native:
    needs: source-code
    runs-on: windows-latest
    steps:
      - run: |
          $CDR = Split-Path -Leaf (Get-Location)
          cd ..
          Remove-Item -Recurse -Force $CDR
          New-Item -ItemType Directory -Force -Name $CDR
          cd $CDR
        shell: pwsh
      - name: Get processed code
        uses: actions/download-artifact@v4
        with:
          name: SourceCode
          path: SourceCode
      - name: Unpack source code
        run: 7z x SourceCode/corona.tgz
        shell: bash
      - run: ./tools/GHAction/daily_env.sh
        shell: bash
      - name: Build Native
        run: JAVA_HOME="${JAVA_HOME_17_X64:-$JAVA_HOME_17_arm64}" ./tools/GHAction/build_native.sh
        env:
          CERT_PASSWORD: ${{ secrets.CertPassword }}
        shell: bash
      - name: Upload Corona Native
        uses: actions/upload-artifact@v4
        with:
          name: Native
          path: ./output

  webtemplate:
    needs:
      - source-code
    runs-on: windows-latest
    steps:
      - run: |
          $CDR = Split-Path -Leaf (Get-Location)
          cd ..
          Remove-Item -Recurse -Force $CDR
          New-Item -ItemType Directory -Force -Name $CDR
          cd $CDR
        shell: pwsh
      - name: Set up emsdk
        run: |
          Invoke-WebRequest -Uri https://github.com/coronalabs/emsdk/releases/download/e2.0.34/emsdk.tar.xz -OutFile emsdk.tar.xz
          tar -xjf emsdk.tar.xz -C $HOME
          Remove-Item -Recurse -Force $HOME\emsdk\com.apple.quarantine
        shell: pwsh
      - name: Get processed code
        uses: actions/download-artifact@v4
        with:
          name: SourceCode
          path: SourceCode
      - name: Unpack source code
        run: 7z x SourceCode/corona.tgz
        shell: bash
      - run: ./tools/GHAction/daily_env.sh
        shell: bash
      - name: Build webtemplate
        working-directory: ./platform/emscripten/gmake
        run: |
          source $HOME/emsdk/emsdk_env.sh
          ./build_template.sh
        shell: bash
      - name: Copy result to output
        run: |
          mkdir output
          Copy-Item platform/emscripten/webtemplate.zip -Destination output
        shell: pwsh
      - name: Upload webtemplate artifact
        uses: actions/upload-artifact@v4
        with:
          name: Webtemplate
          path: ./output

  Windows-Simulator:
    needs:
      - source-code
      - native
      - webtemplate
      - linux
    runs-on: windows-latest
    steps:
      - name: Get processed code
        uses: actions/download-artifact@v4
        with:
          name: SourceCode
          path: SourceCode
      - name: Unpack source code
        run: |
          7z x SourceCode/corona.tgz
          7z x corona.tar
        shell: bash
      - run: ./tools/GHAction/daily_env.sh
        shell: bash
      - run: mkdir docs
        shell: cmd
      - name: Get Sample Code
        uses: actions/checkout@v4
        with:
          repository: coronalabs/samples-coronasdk
          path: docs/SampleCode
      - name: Clean-up docs
        run: rmdir /s /q docs/SampleCode/.git docs/SampleCode/.gitignore
        shell: cmd
      - name: Move docs outside the directory
        run: move docs ..\docs
        shell: cmd
      - name: Get Webtemplate
        uses: actions/download-artifact@v4
        with:
          name: Webtemplate
          path: Webtemplate
      - name: Put webtemplate in place
        run: copy Webtemplate\webtemplate.zip platform\resources\
        shell: cmd
      - name: Get NX Template
        run: |
          curl -sL https://github.com/coronalabs/binary-data/releases/download/1.0/nxtemplate > platform\resources\nxtemplate
        shell: bash
      - name: Get Linux template
        uses: actions/download-artifact@v4
        with:
          name: Linux-Template
          path: Linux-Template
      - name: Put Linux template in place
        run: copy Linux-Template\linuxtemplate_x64.tgz platform\resources\
        shell: cmd
      - name: Get Corona Native
        uses: actions/download-artifact@v4
        with:
          name: Native
          path: Native
      - name: Put native in place
        run: |
          mkdir platform\windows\Bin
          cd platform\windows\Bin
          rmdir /s /q Native
          tar -xvzf Native\CoronaNative.tar.gz
          del ._CoronaEnterprise
          move CoronaEnterprise Native
          del /q /f Native\.*
          del /q /f Native\Icon?
          del /q /f /s Native\Corona\tvos\frameworks\CoronaCards.framework
        shell: cmd
      - name: Put JRE in place
        run: |
          curl -sL https://github.com/coronalabs/binary-data/releases/download/1.0/jre.win32.7z -o jre.win32.7z
          7z x jre.win32.7z -o platform\windows\Bin -y
        shell: cmd
      - name: Put redistributables in place
        run: |
          curl -sL https://github.com/coronalabs/binary-data/releases/download/1.0/redist.win32.7z -o redist.win32.7z
          7z x redist.win32.7z -o platform\windows\Bin\redist -y
        shell: cmd
      - name: Build Corona Simulator
        run: |
          cd platform\windows
          call UpdateFileVersions.bat %BUILD_NUMBER%
          call Build.Tools\VSVars.bat
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars32.bat"
          devenv "Corona.SDK.sln" /rebuild "Release|x86"
        shell: cmd
        env:
          WIN_CERT_PASSWORD: ${{ secrets.WinCertPassword }}
      - name: Copy Simulator
        run: |
          mkdir output
          copy platform\windows\Bin\Corona.SDK.Installer\Corona.msi output\Corona-$BUILD.msi
        shell: cmd
      - name: Upload Windows Corona artifact
        uses: actions/upload-artifact@v4
        with:
          name: Simulator-Windows
          path: ./output
